@using System.Globalization
@inject NavigationManager navigate
@using LocalizationManagerSDK.Services
@using Microsoft.Extensions.Localization
@using System.Reflection
@inject LocalizationService service


<div>
    <select @onchange="ChangeCulture">
        <option value="en-US" selected="@IsSelected("en-US")">@service.GetString("LanguageEN")</option>
        <option value="hu-HU" selected="@IsSelected("hu-HU")">@service.GetString("LanguageHU")</option>
    </select>
</div>

@code {
    private string selectedCulture = "en-US";

    protected override void OnInitialized()
    {
        service.OnLanguageChanged += RefreshUI;
        selectedCulture = service.CurrentCulture;
    }

    private void ChangeCulture(ChangeEventArgs e)
    {
        selectedCulture = e.Value.ToString();
        service.SetCulture(selectedCulture);
        navigate.NavigateTo(navigate.Uri, forceLoad: true);
    }
    private void RefreshUI()
    {
        InvokeAsync(StateHasChanged);
    }
    private bool IsSelected(string culture) => selectedCulture == culture;
}