@using LocalizationManager.Transfer.Application
@using LocalizationManager.Transfer.LocalizationDtos
@using LocalizationManager.Web.Client

@inject ILocalizationClient LocalizationClient
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudForm @ref="form">
            <MudGrid Spacing="2">
                <MudItem xs="6">
                    <MudTextField @bind-Value="ApplicationDto.AppName" Label="App Name" Variant="Variant.Outlined" Disabled Required="true" />
                </MudItem>

                <MudItem xs="6">
                    <MudSelect @bind-Value="_localizationValueDto.LanguageCode" Label="Language" MultiSelection="false" Disabled="IsEdit" Variant="Variant.Outlined" Required="true">
                        @foreach (var language in ApplicationDto.SupportedLanguages)
                        {
                            <MudSelectItem Value="@language">@language</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>

                <MudItem xs="12">
                    <MudTextField @bind-Value="_localizationValueDto.Key" Label="Key" Variant="Variant.Outlined" Disabled="IsEdit" Required="true" />
                </MudItem>
                
                <MudItem xs="12">
                    <MudTextField @bind-Value="_localizationValueDto.Value" Label="Value"
                            Variant="Variant.Outlined" Required="true" Lines="3" MaxLength="500" />
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Color="Color.Secondary">Cancel</MudButton>

        <MudSpacer />

        <MudButton OnClick="SaveAsync" Color="Color.Primary">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public LocalizationValueDto? LocalizationValue { get; set; } = null;

    [Parameter] public ApplicationDto ApplicationDto { get; set; }

    private bool IsEdit = false;

    private LocalizationValueDto _localizationValueDto = new();

    private MudForm form;

    protected override void OnParametersSet()
    {
        if (LocalizationValue != null)
        {
            _localizationValueDto = new LocalizationValueDto
            {
                AppId = LocalizationValue.AppId,
                Key = LocalizationValue.Key,
                LanguageCode = LocalizationValue.LanguageCode,
                Value = LocalizationValue.Value
            };

            IsEdit = true;
        }
        else
        {
            _localizationValueDto = new() { AppId = ApplicationDto.AppId };
        }

    }

    private async Task SaveAsync()
    {
        await form.Validate();

        if (form.IsValid)
        {
            if (IsEdit)
            {
                try
                {
                    await LocalizationClient.UpdateLocalizationValueAsync(_localizationValueDto);

                    Snackbar.Add("Successfully updated localization!", Severity.Success);
                }
                catch (Exception)
                {
                    Snackbar.Add("Failed to update localization!", Severity.Error);
                }
            }
            else
            {
                try
                {
                    await LocalizationClient.AddLocalizationValueAsync(_localizationValueDto);

                    Snackbar.Add("Successfully added localization!", Severity.Success);
                }
                catch (Exception)
                {
                    Snackbar.Add("Failed to add localization!", Severity.Error);
                }
            }

            MudDialog.Close(DialogResult.Ok(_localizationValueDto));
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}